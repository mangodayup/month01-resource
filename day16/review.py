"""
    生成器
        生成器函数
            语法:
                def 函数名():
                    ...
                    yield 数据
                    ...

                生成器 = 函数名()
                for item in 生成器:
                    ...
            适用性:
                函数有多个结果使用yield
                函数有单个结果使用return
            优势:
                节省内存
            原理
                将yield之前的代码定义在__next__函数体中
                将yield之前的数据作为__next__返回值
                用迭代器封装以上的代码
    迭代:每次在之前结果之上对过程的重复
        例如:获取容器中所有元素
        可迭代对象:具有__iter__函数,创造迭代器
        迭代器:具有__next__函数,执行迭代过程



"""