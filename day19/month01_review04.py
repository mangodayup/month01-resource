"""
    Python 高级
        程序结构
            根目录
                main.py
                包
                    模块
                        类
                            方法
                                语句
            基础概念
                根目录：主模块所在文件夹
                主模块：第一次执行的文件
            导入方式
                import 模块
                模块.成员

                from 模块 import 成员
                成员
            是否成功标准：
                导入路径 + 系统路径 = 真实路径
        异常处理
            异常现象：不断向上翻,不继续向下执行
            本质：快速传递错误消息
            流程：
                A -> B -> C -> D -> E
                        try      raise 异常类型()
                            ...
                        except 异常类型
                            ...
        迭代与生成器
            生成器函数
                def 函数名():
                    ...
                    yield 数据
                    ...

                # 节省内存
                for 变量 in 函数名():
                    ...

                # 定位方便
                list(函数名())

            生成器表达式
                语法：
                    生成器 = (变量处理 for 变量 in 可迭代对象 if 条件)
                适用性：
                    传统思想(列表推导式)
                        优点：操作数据类型(索引切片)
                        缺点：占用内存过多
                    生成器思想:
                        优点：节省内存
                        缺点：从头到尾读取数据
        函数式编程
            函数作为参数
                将行为传入函数(核心算法灵活)
            函数作为返回值
                逻辑连续(从得到旧功能,到重复使用内部函数,不中断)
"""